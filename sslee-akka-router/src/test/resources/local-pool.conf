akka {
  #loggers = ["akka.event.slf4j.Slf4jLogger"]
  loggers = ["akka.event.Logging$DefaultLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  
  actor.deployment {
    /localRouter {
      router = round-robin-pool
      nr-of-instances = 5
      
      #resize의 판단은 routee에 message를 할당하기 전에 판단한다.
      #resize는 동기적으로 실행 되지 않는다.
      #resize의 판단은 routee에 message를 할당하기 전에 판단한다.
      #resize는 동기적으로 실행 되지 않는다.
      resizer {
        
        #resizer 기능을 킨다.
        enabled = on
        
        #routee의 최소 갯수
        lower-bound = 1 
        
        #routee의 최대 갯수       
        upper-bound = 100 
        
        #resiz의 발생 기준
        #모든 actor의 mailbox에 message가 1개 있을 경우
        #0 일경우 mailbox에 message 갯수와 상관 없이 모든 routee가 메시지를 처리중 일 경우
        pressure-threshold = 5
        
        #size up 변동 크기 갯수 
        #현재 routee의 갯수 * 0.25  = result의 소숫점 첫째자리 올림
        rampup-rate = 0.25
        
        #언제 routee의 갯수를 줄일 것인가?
        #message를 처리하는 routee의 비율이 0.3 미만일때 resize down
        #현재 전체 routee 갯수 * 0.3 에 대한 미만 일 경우
        backoff-threshold = -1
        
        #size down 변동 크기 갯수
        #rampup-rate 와 개산방식은 동일 하다. 
        backoff-rate = 0.3
        
        #크기 조정 후 다음 재조정까지 최소 몇 개의 메시지를 받아야 하는지 설정
        #이는 message가 도착할 때마다 크기가 꼐속 늘거나 줄어드는 것을 방지 하기 위함
        messages-per-resize = 1
      }
    }
  }
}

